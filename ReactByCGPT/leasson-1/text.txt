🧪 React Lesson 1: Setup + First Component
✅ Step 1: Prerequisites
Make sure you have installed:
✅ Node.js
✅ VS Code
✅ Basic terminal knowledge
Let’s use Vite (it's modern and faster than Create React App).

✅ Step 2: Create a React Project with Vite
Open your terminal and run: 

npm create vite@latest my-react-app -- --template react
Now:
cd my-react-app
npm install
npm run dev

Your browser will open at:
http://localhost:5173 — showing a default Vite + React app.

✅ Step 3: Clean the Project (Optional)
Delete these files inside src/:

App.css
assets/
Clear the content inside App.jsx and main.jsx

✅ Step 4: Write Your First Component
📁 src/App.jsx 

function App() {
  return (
    <div>
      <h1>Hello, Atik 👋</h1>
      <p>Welcome to your first React app!</p>
    </div>
  );
}

export default App;

📁 src/main.jsx

import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';

ReactDOM.createRoot(document.getElementById('root')).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
);

✅ Step 5: Run It Again

npm run dev
You should see:
Hello, Atik 👋
Welcome to your first React app!

🧱 React Lesson 2: Components & Composition
✅ What Is a Component?
A component is a reusable block of UI.
Each part of your app — like Header, Footer, Card, Button — can be a component.

✅ Step 1: Create a New File
Create a new file inside src/ folder:

📁 src/Footer.jsx

function Footer() {
  return (
    <footer style={{ marginTop: "30px", color: "gray" }}>
      <hr />
      <p>Made with ❤️ by Atik</p>
    </footer>
  );
}

export default Footer;

✅ Step 2: Use the Footer Component in App.jsx
📁 src/App.jsx

import Footer from './Footer'; // ⬅️ import the component

function App() {
  return (
    <div>
      <h1>Hello, Atik 👋</h1>
      <p>Welcome to your first React app!</p>

      {/* Use the component */}
      <Footer />
    </div>
  );
}

export default App;

✅ Output:
You’ll now see:

Hello, Atik 👋
Welcome to your first React app!
-------------------------------
Made with ❤️ by Atik
🔁 Summary of What You Learned:
Concept	Example
Component	function Footer()
Composition	<Footer /> inside <App />
Import/Export	import Footer from './Footer'

🧠 React Lesson 3: Props (Component Communication)
✅ What Are Props?
Props (short for properties) are how you pass data from parent to child components.

Think of props like arguments you pass into a function.

✅ Step 1: Create a Welcome.jsx Component
📁 src/Welcome.jsx

function Welcome(props) {
  return (
    <div>
      <h2>👋 Welcome, {props.name}!</h2>
      <p>Your role is: {props.role}</p>
    </div>
  );
}

export default Welcome;

✅ Step 2: Use It in App.jsx
📁 src/App.jsx

import Welcome from './Welcome';
import Footer from './Footer';

function App() {
  return (
    <div>
      <Welcome name="Atik Al Mahmud" role="Frontend Developer" />
      
      <h1>React is awesome 💙</h1>
      <Footer />
    </div>
  );
}

export default App;

✅ Output:
👋 Welcome, Atik Al Mahmud!
Your role is: Frontend Developer
React is awesome 💙
Made with ❤️ by Atik
🔄 Bonus: Destructure Props
Instead of props.name, you can use destructuring:

📁 Welcome.jsx
function Welcome({ name, role }) {
  return (
    <div>
      <h2>👋 Welcome, {name}!</h2>
      <p>Your role is: {role}</p>
    </div>
  );
}

🧠 React Lesson 4: useState Hook
✅ What Is State?
State is data that a component can change over time — like input values, counters, toggles, loading indicators, etc.
React gives us a hook called useState to manage this.

✅ Step 1: Simple Counter Example
📁 src/Counter.jsx
import { useState } from "react";

function Counter() {
  const [count, setCount] = useState(0); // initial value is 0

  return (
    <div>
      <h2>Counter: {count}</h2>
      <button onClick={() => setCount(count + 1)}>➕ Increase</button>
      <button onClick={() => setCount(count - 1)}>➖ Decrease</button>
      <button onClick={() => setCount(0)}>🔄 Reset</button>
    </div>
  );
}

export default Counter;

✅ Step 2: Use It in App.jsx
import Counter from './Counter';
import Footer from './Footer';
import Welcome from './Welcome';

function App() {
  return (
    <div>
      <Welcome name="Atik Al Mahmud" role="Frontend Developer" />
      <Counter />
      <Footer />
    </div>
  );
}

export default App;